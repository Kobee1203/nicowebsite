<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.nds.authentication</groupId>
	<artifactId>authentication</artifactId>
	<packaging>war</packaging>
	<version>0.0.1-SNAPSHOT</version>
    <name>Authentication</name>
    <url></url>
    
    <description></description>

    <developers>
        <developer>
            <id>nds</id>
            <name>Nicolas Dos Santos</name>
            <email>nicolas.dossantos@gmail.com</email>
        </developer>
    </developers>

    <properties>
	   <compileSource>1.6</compileSource>
       
       <spring.version>3.0.0.RELEASE</spring.version>
       <jsf.version>2.0.2</jsf.version>
       <richfaces.version>3.3.3.BETA1</richfaces.version>
	</properties>


    <dependencies>
		<dependency>
	       <groupId>junit</groupId>
	       <artifactId>junit</artifactId>
	       <version>4.3.1</version>
	       <scope>test</scope>
		</dependency>
        <dependency>
            <groupId>org.seleniumhq.selenium.client-drivers</groupId>
            <artifactId>selenium-java-client-driver</artifactId>
            <version>1.0.1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <version>5.11</version>
            <scope>test</scope>
            <classifier>jdk15</classifier>
        </dependency>
        
		<dependency>
	       <groupId>log4j</groupId>
	       <artifactId>log4j</artifactId>
	       <version>1.2.14</version>
		</dependency>
        <dependency>
           <groupId>javax.servlet</groupId>
           <artifactId>jstl</artifactId>
           <version>1.1.2</version>
        </dependency>
		<dependency>
	       <groupId>org.springframework</groupId>
	       <artifactId>spring-core</artifactId>
	       <version>${spring.version}</version>
		</dependency>
		<dependency>
           <groupId>org.springframework</groupId>
           <artifactId>spring-web</artifactId>
           <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-core</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-config</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-openid</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-taglibs</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-web</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.tiles</groupId>
            <artifactId>tiles-servlet</artifactId>
            <version>2.1.4</version>
        </dependency>
        <dependency>
            <groupId>org.apache.tiles</groupId>
            <artifactId>tiles-jsp</artifactId>
            <version>2.1.4</version>
        </dependency>
        
        <dependency>
            <groupId>com.sun.faces</groupId>
            <artifactId>jsf-api</artifactId>
            <version>${jsf.version}</version>
        </dependency>
        <dependency>
            <groupId>com.sun.faces</groupId>
            <artifactId>jsf-impl</artifactId>
            <version>${jsf.version}</version>
        </dependency>
        
        <dependency>
            <groupId>org.richfaces.ui</groupId>
            <artifactId>richfaces-ui</artifactId>
            <version>${richfaces.version}</version>
        </dependency>
        <dependency>
           <groupId>org.richfaces.framework</groupId>
           <artifactId>richfaces-impl-jsf2</artifactId>
	       <version>${richfaces.version}</version>
        </dependency>

        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate</artifactId>
            <version>3.2.7</version>
            <exclusions>
              <exclusion>
                <groupId>javax.transaction</groupId>
                <artifactId>jta</artifactId>
              </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>javax.transaction</groupId>
            <artifactId>jta</artifactId>
            <version>1.0.1b</version>
        </dependency>

        <dependency>
            <groupId>com.octo.captcha</groupId>
            <artifactId>jcaptcha-all</artifactId>
            <version>1.0-RC6</version>
        </dependency>

	</dependencies>

    <build>
        <finalName>authentication</finalName>
        <plugins>
            <!-- Plugin compiler  -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>${compileSource}</source>
                    <target>${compileSource}</target>
                    <encoding>UTF-8</encoding>
                    <showDeprecation>true</showDeprecation>
                    <showWarnings>true</showWarnings>
                </configuration>
            </plugin>
            
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <!--
                        Exclude all integration tests so that they are not executed during the test phase. This is because of a limitation in Maven 2.0.x which only supports compiling a single test source tree. The recommendation is to create a
                        separate module for functional tests as is done in the cargo-archetype-webapp-functional-test-module
                    -->
                    <excludes>
                        <exclude>**/it/**</exclude>
                    </excludes>
                </configuration>
                <executions>
                    <execution>
                        <phase>integration-test</phase>
                        <goals>
                            <goal>test</goal>
                        </goals>
                        <configuration>
                            <!--
                                Include only integration tests so that they are executed during the integration-test phase. Again this this is because of a limitation in Maven 2.0.x which only supports compiling a single test source tree. The
                                recommendation is to create a separate module for functional tests as is done in the cargo-archetype-webapp-functional-test-module
                            -->
                            <excludes>
                                <exclude>none</exclude>
                            </excludes>
                            <includes>
                                <include>**/it/**</include>
                            </includes>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            
            <!-- Plugin Jetty -->
            <plugin>
                <groupId>org.mortbay.jetty</groupId>
                <artifactId>maven-jetty-plugin</artifactId>
                <configuration>
                    <stopPort>9966</stopPort>
                    <stopKey>srop</stopKey>
                </configuration>
                <executions>
                   <execution>
                      <id>start-jetty</id>
                      <phase>pre-integration-test</phase>
                      <goals>
                         <goal>run</goal>
                      </goals>
                      <configuration>
                         <daemon>true</daemon>
                      </configuration>
                   </execution>
                   <execution>
                      <id>stop-jetty</id>
                      <phase>post-integration-test</phase>
                      <goals>
                         <goal>stop</goal>
                      </goals>
                   </execution>
                </executions>
            </plugin>
            
            <!-- Plugin Selenium -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>selenium-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>start</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <!--
                            Si besoin d'xvfb (environnement graphique virtuel sous linux)
                            <goal>xvfb</goal>
                            -->
                            <goal>start-server</goal>
                        </goals>
                        <configuration>
                            <background>true</background>
                            <!--
                            To capture the logs from Selenium to a file, enable logOutput.
                            This will create a server.log that captures all of the output.
                            -->
                            <logOutput>false</logOutput>
                            <multiWindow>true</multiWindow>
                        </configuration>
                    </execution>
                    <execution>
                        <id>stop</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>stop-server</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
                        
            <!--plugin>
                <groupId>org.codehaus.cargo</groupId>
                <artifactId>cargo-maven2-plugin</artifactId>
                <configuration>
                    <wait>false</wait>
                </configuration>
                <executions>
                    <execution>
                        <id>start</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>start</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>stop</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>stop</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin-->
            
            
        </plugins>
    </build>
    
    <!-- 
    clean package cargo:start -P tomcat6x 
    cargo:stop -P tomcat6x
    clean jetty:run
    jetty:stop
    Problem with jetty6x profile : 
    clean package cargo:start -P jetty6x 
    cargo:stop -P jetty6x
    -->
    
    <profiles>
        <profile>
            <id>tomcat6x</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.cargo</groupId>
                        <artifactId>cargo-maven2-plugin</artifactId>
                        <configuration>
                            <wait>true</wait>
                            <container>
                                <containerId>tomcat6x</containerId>
                                <zipUrlInstaller>
                                    <url>http://www.apache.org/dist/tomcat/tomcat-6/v6.0.24/bin/apache-tomcat-6.0.24.zip</url>
                                </zipUrlInstaller>
                            </container>
                            <configuration>
                                <type>standalone</type>
                                <home>target/tomcat6x</home>
                            </configuration>
                        </configuration>
                        <executions>
                            <execution>
                                <id>start</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>start</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>stop</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>stop</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>